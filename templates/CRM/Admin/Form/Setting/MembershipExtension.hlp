{*-------------------------------------------------------+
| Project 60 - Membership Extension                      |
| Copyright (C) 2013-2015 SYSTOPIA                       |
| Author: B. Endres (endres -at- systopia.de)            |
| http://www.systopia.de/                                |
+--------------------------------------------------------+
| This program is released as free software under the    |
| Affero GPL license. You can redistribute it and/or     |
| modify it under the terms of this license which you    |
| can read by viewing the included agpl.txt or online    |
| at www.gnu.org/licenses/agpl.html. Removal of this     |
| copyright header is strictly prohibited without        |
| written permission from the original author(s).        |
+-------------------------------------------------------*}


{htxt id='id-sync-timeframe'}
  <p>{ts domain='org.project60.membership'}This defines which contributions will be considered for synchronisation by defining a time frame. This is optional{/ts}</p>
  <p>{ts domain='org.project60.membership'}You can enter any valid <code>strtotime()</code> string like "2017-01-01" or "now - 2 days". You can find a documentation <a href="https://www.php.net/manual/en/datetime.formats.php">here</a>{/ts}</p>
{/htxt}

{htxt id='id-sync-range'}
  <p>{ts domain='org.project60.membership'}If a membership payment is received within this number of days before the current starting date, the start and the join date will be extended to the payment's received date.{/ts}</p>
{/htxt}

{htxt id='id-grace-period'}
  <p>{ts domain='org.project60.membership'}Membership payments will be accepted up to this amount of days after the current end date.{/ts}</p>
  <p>{ts domain='org.project60.membership'}In order to associate contributions with expired memberships, you will first have to manually extend those memberships.{/ts}</p>
{/htxt}

{htxt id='id-mapping'}
  <p>{ts domain='org.project60.membership'}Here you can decide which contribution types should be associated with which membership types.{/ts}</p>
  <p>{ts domain='org.project60.membership'}One contribution type can currently only be mapped to one membership type, so you would need one contribution type per membership type.{/ts}</p>
{/htxt}

{htxt id='id-live-status'}
  <p>{ts domain='org.project60.membership'}Only if a membership has a 'live' status, membership payments will be assigned to it.{/ts}</p>
  <p>{ts domain='org.project60.membership'}Caution: This status list is only valid for the payment synchronization tool, the membership extension job uses the parameter <code>status_ids</code> instead.{/ts}</p>
{/htxt}

{htxt id='id-paid-via'}
  <p>{ts domain='org.project60.membership'}You can select a membership custom field to record the connection to any recurring contribution, e.g. a CiviSEPA mandate or similar.{/ts}</p>
  <p>{ts domain='org.project60.membership'}The field has to be an integer type, active, read only, and searchable custom field to be eligible.{/ts}</p>
{/htxt}

{htxt id='update-membership-status'}
  <p>{ts domain='org.project60.membership'}Extend the membership as soon as the membership contribution is set to completed.{/ts}</p>
  <p>{ts domain='org.project60.membership'}This will calculate the new end date and a new status.{/ts}</p>
  <p>{ts domain='org.project60.membership'}Remark: This only works if there is exactly one contribution per membership period.{/ts}</p>
{/htxt}

{htxt id='id-paid-via-end-status'}
  <p>{ts domain='org.project60.membership'}For any membership status you select, the linked recurring contribution or mandate will be ended automatically should a membership be set to that status.{/ts}</p>
{/htxt}

{htxt id='id-paid-by'}
  <p>{ts domain='org.project60.membership'}You can select a membership custom field to indicate that another contact is paying for this membership.{/ts}</p>
  <p>{ts domain='org.project60.membership'}The field has to be an contact reference type, active, and searchable custom field to be eligible.{/ts}</p>
{/htxt}

{htxt id='id-number'}
  <p>{ts domain='org.project60.membership'}You can select a membership custom field to contain the Membership Number{/ts}</p>
  <p>{ts domain='org.project60.membership'}The field has to be an active, alphanumeric (text) type, is_view, searchable custom field to be eligible.{/ts}</p>
{/htxt}

{htxt id='id-number-show'}
  <p>{ts domain='org.project60.membership'}If you select this, the current membership number of the contact will be show in the contact's summary view, underneath the external identifier.{/ts}</p>
{/htxt}

{htxt id='id-number-generator'}
  <p>{ts domain='org.project60.membership'}If you fill this field the membership number will automatically generated for <i>new</i> memberships.{/ts}</p>
  <p>{ts domain='org.project60.membership'}Any characters are allowed but it is advisable to stick to alphanumeric characters, and to avoid whitespaces and special characters.{/ts}</p>
  <p>
    {ts domain='org.project60.membership'}Additionally, the following special tokens are currently available:{/ts}:
    <ul>
      <li>{ts domain='org.project60.membership'}<code>{literal}{mid[+offset]}{/literal}</code>: CiviCRM Membership ID, with optional offset value. Example <code>{literal}{mid+1000}{/literal}</code>{/ts}</li>
      <li>{ts domain='org.project60.membership'}<code>{literal}{cid[+offset]}{/literal}</code>: CiviCRM Contact ID, with optional offset value. Example <code>{literal}{cid+100000}{/literal}</code>{/ts}</li>
      <li>{ts domain='org.project60.membership'}<code>{literal}{YY}{/literal}</code>: A two digit representation of the current year.{/ts}</li>
      <li>{ts domain='org.project60.membership'}<code>{literal}{YYYY}{/literal}</code>: A full numeric representation of the current year in 4 digits.{/ts}</li>
      <li>{ts domain='org.project60.membership'}<code>{literal}{YY0}{/literal}</code>: The same as <code>{literal}YY{/literal}</code>, but the membership ID counts up from 0 every year.{/ts}</li>
      <li>{ts domain='org.project60.membership'}<code>{literal}{YYYY0}{/literal}</code>: The same as <code>{literal}YYYY{/literal}</code>, but the membership ID counts up from 0 every year.</code>{/ts}</li>
    </ul>
  </p>
{/htxt}

{htxt id='id-cancel-date'}
  <p>{ts domain='org.project60.membership'}The core membership entity only has an end date, but if you want to keep track of the date somebody cancelled the membership, you can create a new custom field of type Date. You can then select it here to make this date available as a token.{/ts}</p>
{/htxt}

{htxt id='id-cancel-reason'}
  <p>{ts domain='org.project60.membership'}The core membership entity doesn't have a field for the cancel reason, but if you want record this data, you can create a new custom field of type Text. You can then select it here to make this date available as a token.{/ts}</p>
{/htxt}

{htxt id='id-hide-auto-renewal'}
  <p>{ts domain='org.project60.membership'}The built-in auto renewal feature interferes with the P60 membership concept, so we recommend not to use it. If you activate this option the fields will be hidden from the UI and the column in the tab and the search result will be freed up for something else.{/ts}</p>
{/htxt}

{htxt id='id-annual-amount-field'}
  <p>{ts domain='org.project60.membership'}Select an editable monetary field where you define the annual expected membership fees, should they deviate from the amount defined by the membership type.{/ts}</p>
{/htxt}

{htxt id='id-record-fee-updates'}
  <p>{ts domain='org.project60.membership'}If active, any change of the annual amount (determined by the two fields above) will be recorded as an activity.{/ts}</p>
{/htxt}

{htxt id='id-installment-amount-field'}
  <p>{ts domain='org.project60.membership'}Select a read-only monetary field to display the installment amount as provided by the paid-via recurring contribution.{/ts}</p>
{/htxt}

{htxt id='id-annual-gap-field'}
  <p>{ts domain='org.project60.membership'}Select a read-only monetary field to display any deviation between annual amount as required and as provided by the paid-via recurring contribution.{/ts}</p>
{/htxt}

{htxt id='id-payment-frequency-field'}
  <p>
    {ts domain='org.project60.membership'}You can choose any select field, but it's options has to have entries for the following values:{/ts}
    <ul>
      <li>{ts domain='org.project60.membership'}1: monthly{/ts}</li>
      <li>{ts domain='org.project60.membership'}3: quarterly{/ts}</li>
      <li>{ts domain='org.project60.membership'}6: semi-annually{/ts}</li>
      <li>{ts domain='org.project60.membership'}12: annually{/ts}</li>
    </ul>
  </p>
{/htxt}

{htxt id='id-payment-type-field'}
  <p>{ts domain='org.project60.membership'}Pick a field to reflect your recurring contribution's payment instrument. You can simply use the built-in payment_instrument group, or specifiy a mapping below.{/ts}</p>
{/htxt}

{htxt id='id-payment-type-field-mapping'}
  <p>{ts domain='org.project60.membership'}You can enter a string to map the payment instrument id of your recurring contribution in the field above to the values of your option group.{/ts}</p>
  <p>{ts domain='org.project60.membership'}The format is a comma separated list of "payment_instrument_id:option_group_value" mappings, e.g. "1:3,2:2,5:4,6:4".{/ts}</p>
{/htxt}

{htxt id='id-payment-type-field'}
  <p>{ts domain='org.project60.membership'}This is not a setting, but will rebuild all information derived from the paid-via field when you press the save button.{/ts}</p>
{/htxt}

{htxt id='id-update-now'}
  <p>{ts domain='org.project60.membership'}If you check this box, all your derived fields will be re-calculated based on the currently linked recurring payment.{/ts}</p>
{/htxt}

{htxt id='id-additional-tokens'}
  <p>{ts domain='org.project60.membership'}You can define arbitrary membership custom fields to be added to the membership token list.{/ts}</p>
{/htxt}

{htxt id='id-missing-amount-field'}
  <p>{ts domain='org.project60.membership'}Holds the outstanding amount for the current membership period. This is calcualted by the Membership.process job.{/ts}</p>
{/htxt}
